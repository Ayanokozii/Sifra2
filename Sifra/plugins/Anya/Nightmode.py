import random
from pyrogram import filters, Client, enums
from Sifra import app
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ChatPermissions
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from Sifra.utils.Databases.nightmodedb import nightdb, nightmode_on, nightmode_off, get_nightchats
import logging

logging.basicConfig(level=logging.INFO)
LOGGER = logging.getLogger(__name__)

# Permissions to close the chat
CLOSE_CHAT = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_other_messages=False,
    can_send_polls=False,
    can_change_info=False,
    can_add_web_page_previews=False,
    can_pin_messages=False,
    can_invite_users=False
)

# Permissions to open the chat
OPEN_CHAT = ChatPermissions(
    can_send_messages=True,
    can_send_media_messages=True,
    can_send_other_messages=True,
    can_send_polls=True,
    can_change_info=True,
    can_add_web_page_previews=True,
    can_pin_messages=True,
    can_invite_users=True
)

# Buttons for enabling/disabling night mode
buttons = InlineKeyboardMarkup([
    [
        InlineKeyboardButton("‡πè ·¥á…¥·¥Ä ô ü·¥á ‡πè", callback_data="add_night"),
        InlineKeyboardButton("‡πè ·¥Ö…™s·¥Ä ô ü·¥á ‡πè", callback_data="rm_night")
    ]
])

# Command to manage night mode
@app.on_message(filters.command("nightmode") & filters.group)
async def _nightmode(_, message):
    await message.reply_photo(
        photo="https://te.legra.ph/file/e10f3ce39e10948e20a1c.jpg",
        caption="**·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥á ü·¥è·¥°  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥á…¥·¥Ä ô ü·¥á ·¥è Ä ·¥Ö…™s·¥Ä ô ü·¥á …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**",
        reply_markup=buttons
    )

# Callback query handler for night mode
@app.on_callback_query(filters.regex("^(add_night|rm_night)$"))
async def nightcb(_, query: CallbackQuery):
    data = query.data
    chat_id = query.message.chat.id
    user_id = query.from_user.id
    check_night = await nightdb.find_one({"chat_id": chat_id})

    administrators = [m.user.id for m in await app.get_chat_members(chat_id, filter=enums.ChatMembersFilter.ADMINISTRATORS)]

    if user_id in administrators:
        if data == "add_night":
            if check_night:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")
            else:
                await nightmode_on(chat_id)
                await query.message.edit_caption("**‡πè ·¥Ä·¥Ö·¥Ö·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ ·¥õ·¥è ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á. ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò ·¥°…™ ü ü  ô·¥á ·¥Ñ ü·¥ès·¥á·¥Ö ·¥è…¥ ùü∑ùü∏·¥Ä·¥ç [IST] ·¥Ä…¥·¥Ö ·¥°…™ ü ü ·¥è·¥ò·¥á…¥ ·¥è…¥ ùü∂ùüº·¥Ä·¥ç [IST].**")
        elif data == "rm_night":
            if check_night:
                await nightmode_off(chat_id)
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö “ì Ä·¥è·¥ç ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á!**")
            else:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")

# Function to start night mode
async def start_nightmode():
    schats = await get_nightchats()
    chats = [int(chat["chat_id"]) for chat in schats]

    for add_chat in chats:
        try:
            await app.send_photo(
                add_chat,
                photo="https://te.legra.ph/file/e10f3ce39e10948e20a1c.jpg",
                caption="**·¥ç·¥Ä è ·¥õ ú·¥á ·¥Ä…¥…¢·¥á üs “ì Ä·¥è·¥ç  ú·¥á·¥Ä·¥†·¥á…¥  ô Ä…™…¥…¢ ·¥õ ú·¥á s·¥°·¥á·¥á·¥õ·¥ás·¥õ ·¥è“ì ·¥Ä ü ü ·¥Ö Ä·¥á·¥Ä·¥çs “ì·¥è Ä  è·¥è·¥ú. …¢ Ä·¥è·¥ú·¥ò …™s ·¥Ñ ü·¥ès…™…¥…¢ …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!**"
            )
            await app.set_chat_permissions(add_chat, CLOSE_CHAT)
        except Exception as e:
            LOGGER.error(f"Unable to close group {add_chat} - {e}")

# Scheduler to start night mode
scheduler = AsyncIOScheduler(timezone="Asia/Kolkata")
scheduler.add_job(start_nightmode, trigger="cron", hour=23, minute=59)
scheduler.start()

# Function to close night mode
async def close_nightmode():
    schats = await get_nightchats()
    chats = [int(chat["chat_id"]) for chat in schats]

    for rm_chat in chats:
        try:
            await app.send_photo(
                rm_chat,
                photo="https://telegra.ph/file/14ec9c3ff42b59867040a.jpg",
                caption="**…¢ Ä·¥è·¥ú·¥ò …™s ·¥è·¥ò·¥á…¥…™…¥…¢ …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!**"
            )
            await app.set_chat_permissions(rm_chat, OPEN_CHAT)
        except Exception as e:
            LOGGER.error(f"Unable to open group {rm_chat} - {e}")

# Scheduler to close night mode
scheduler.add_job(close_nightmode, trigger="cron", hour=6, minute=1)
scheduler.start()

